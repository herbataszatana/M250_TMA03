#BlueJ class context
comment0.params=
comment0.target=Builder()
comment0.text=\r\n\ Q2\ a(ii)\r\n\ Constructor\ for\ objects\ of\ class\ Builder\r\n
comment1.params=aReg\ aName\ anAddress\ aTrade
comment1.target=void\ addContractor(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Q2\ a\ (iii)\r\n\ Add\ contractor\ method\ creates\ an\ instance\ of\ Contractor\ and\ then\ add\ it\ to\ the\ map\ \r\n\ referenced\ by\ the\ instance\ variable\ contractors\ with\ aReg\ as\ the\ key.\ The\ method\ \r\n\ overwrites\ any\ existing\ entry\ for\ the\ key\ aReg.\r\n
comment2.params=
comment2.target=void\ printContractors()
comment2.text=\r\n\ Q2\ a\ (iv)\r\n\ For\ each\ Contractor\ held\ in\ the\ collection\ referenced\ by\ contractors,\ the\ method\ \r\n\ prints\ that\ contractor\u2019s\ record\ to\ the\ standard\ output,\ each\ contractor\ \r\n\ record\ on\ a\ separate\ line.\r\n
comment3.params=aReg
comment3.target=java.lang.String\ findContractor(java.lang.String)
comment3.text=\r\n\ Q2\ b\r\n\ If\ the\ registration\ number\ is\ found\ in\ the\ contractors\ collection\ then\ the\ corresponding\ \r\n\ Contractor\ object\ is\ returned,\ otherwise\ the\ method\ prints\ a\ suitable\ message\ including\ \r\n\ the\ registration\ number\ to\ the\ standard\ output\ and\ returns\ null.\r\n
comment4.params=aTrade
comment4.target=java.util.Set\ findContractorsForTrade(java.lang.String)
comment4.text=\r\n\ Q2\ c\r\n\ The\ method\ loops\ through\ contractors\ looking\ for\ instances\ of\ Contractor\ \r\n\ whose\ trade\ matches\ the\ given\ argument.\ As\ such\ instances\ are\ found,\ \r\n\ the\ method\ adds\ these\ instances\ of\ Contractor\ to\ the\ set\ that\ will\ be\ returned.\r\n
numComments=5
