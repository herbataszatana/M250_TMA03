#BlueJ class context
comment0.params=l\ r\ b
comment0.target=LevelCrossingController(Light,\ Light,\ Light)
comment1.params=
comment1.target=void\ changeState()
comment1.text=\r\n\ Question\ C\ (i)\r\n\ Public\ instance\ method\ which\ takes\ no\ argument\ and\ returns\ no\ value.\ \r\n\ If\ trainComing\ is\ true\ then\ it\ should\ change\ the\ value\ of\ state.\r\n
comment2.params=
comment2.target=void\ colourAllLights()
comment2.text=\r\n\ Q1\ C(ii)\r\n\ Public\ instance\ method\ which\ takes\ no\ argument\ and\ returns\ no\ value.\ \r\n\ This\ method\ uses\ the\ value\ of\ state\ to\ determine\ what\ colour\ each\ of\ the\ three\ lights\ should\ \r\n\ be\ set\ to.\r\n
comment3.params=
comment3.target=boolean\ getTrainComing()
comment3.text=\r\n\ @return\ trainComing\r\n
comment4.params=light\ colour
comment4.target=void\ colourLight(Light,\ ou.OUColour)
comment4.text=\r\n\ \r\n
comment5.params=trainComing
comment5.target=void\ setTrainComing(boolean)
comment5.text=\r\n\ @param\ trainComing\r\n\ setter\ for\ trainComing\r\n
comment6.params=
comment6.target=void\ setPositions()
comment6.text=\r\n\ Sets\ the\ positions\ of\ the\ lights.\r\n
comment7.params=
comment7.target=int\ findNumRepeats()
comment7.text=\r\n\ Find\ out\ how\ many\ times\ red\ lights\ should\ flash\ at\ the\ crossing.\r\n\ Simulates\ length\ of\ train\ at\ crossing.\r\n
comment8.params=time
comment8.target=void\ delay(int)
comment8.text=\r\n\ Causes\ execution\ to\ pause\ for\ a\ number\ of\ milliseconds.\r\n
comment9.params=
comment9.target=void\ doTrainApproaching()
comment9.text=\r\n\ Question\ 1\ E\ \r\n\ Method\ which\ takes\ no\ arguments\ and\ returns\ no\ value.\ It\ informs\ user\ if\ train\ is\ approaching\ and\ what\ is\ the\r\n\ position\ the\ barrier.\ It\ flashes\ lights\ for\ number\ of\ user\ inputs.\ Then\ turns\ off\ lights\ and\ informs\ user\ about\r\n\ position\ of\ the\ barrier\r\n
numComments=10
